{"remainingRequest":"/var/www/html/angular/buskets/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/var/www/html/angular/buskets/node_modules/@ngx-loading-bar/core/esm5/ngx-loading-bar-core.js","dependencies":[{"path":"/var/www/html/angular/buskets/node_modules/@ngx-loading-bar/core/esm5/ngx-loading-bar-core.js","mtime":499162500000},{"path":"/var/www/html/angular/buskets/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/var/www/html/angular/buskets/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Component, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nvar LoadingBarService = /*@__PURE__*/ (function () {\n    function LoadingBarService() {\n        this.progress$ = ((new Subject()).pipe(debounceTime(0)));\n        this._pendingRequests = 0;\n        this._value = 0;\n    }\n    LoadingBarService.prototype.start = function (initialValue) {\n        if (initialValue === void 0) {\n            initialValue = 2;\n        }\n        ++this._pendingRequests;\n        if (this._value === 0 || this._pendingRequests === 1) {\n            this.set(this._pendingRequests === 1 && this._value > 0 ? this._value : initialValue);\n        }\n    };\n    LoadingBarService.prototype.complete = function () {\n        var _this = this;\n        if (this._pendingRequests === 0 && this._value === 0) {\n            return;\n        }\n        if (this._pendingRequests > 0) {\n            --this._pendingRequests;\n        }\n        if (this._pendingRequests === 0 || (this._pendingRequests === 0 && this._value > 0)) {\n            if (this._value !== 100) {\n                this.set(100);\n            }\n            setTimeout(function () { return _this.set(0); }, 500);\n        }\n    };\n    LoadingBarService.prototype.set = function (n) {\n        var _this = this;\n        if (n === 0 && this._pendingRequests > 0) {\n            n = 2;\n        }\n        this._value = n;\n        this.progress$.next(n);\n        if (this._pendingRequests === 0) {\n            return;\n        }\n        clearTimeout(this._incTimeout);\n        if (this._value > 0 && this._value < 100) {\n            this._incTimeout = setTimeout(function () { return _this.increment(); }, 250);\n        }\n    };\n    LoadingBarService.prototype.increment = function (rnd) {\n        if (rnd === void 0) {\n            rnd = 0;\n        }\n        if (rnd > 0) {\n            this.set(this._value + rnd);\n        }\n        var stat = this._value;\n        if (stat >= 0 && stat < 25) {\n            rnd = (Math.random() * (5 - 3 + 1) + 3);\n        }\n        else if (stat >= 25 && stat < 65) {\n            rnd = (Math.random() * 3);\n        }\n        else if (stat >= 65 && stat < 90) {\n            rnd = (Math.random() * 2);\n        }\n        else if (stat >= 90 && stat < 99) {\n            rnd = 0.5;\n        }\n        else {\n            rnd = 0;\n        }\n        this.set(this._value + rnd);\n    };\n    LoadingBarService.prototype.ngOnDestroy = function () {\n        this.progress$.complete();\n    };\n    return LoadingBarService;\n}());\nvar LoadingBarComponent = /*@__PURE__*/ (function () {\n    function LoadingBarComponent(loader) {\n        this.loader = loader;\n        this.includeSpinner = true;\n        this.includeBar = true;\n        this.fixed = true;\n        this.value = null;\n    }\n    return LoadingBarComponent;\n}());\nvar LoadingBarModule = /*@__PURE__*/ (function () {\n    function LoadingBarModule() {\n    }\n    LoadingBarModule.forRoot = function () {\n        return {\n            ngModule: LoadingBarModule,\n            providers: [LoadingBarService],\n        };\n    };\n    return LoadingBarModule;\n}());\nexport { LoadingBarModule, LoadingBarComponent, LoadingBarService };\n//# sourceMappingURL=ngx-loading-bar-core.js.map\n",null]}