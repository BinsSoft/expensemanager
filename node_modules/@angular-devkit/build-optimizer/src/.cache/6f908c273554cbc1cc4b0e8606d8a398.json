{"remainingRequest":"/var/www/html/angular/buskets/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/var/www/html/angular/buskets/node_modules/@ngx-loading-bar/http-client/esm5/ngx-loading-bar-http-client.js","dependencies":[{"path":"/var/www/html/angular/buskets/node_modules/@ngx-loading-bar/http-client/esm5/ngx-loading-bar-http-client.js","mtime":499162500000},{"path":"/var/www/html/angular/buskets/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/var/www/html/angular/buskets/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __spread } from 'tslib';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nvar LoadingBarInterceptor = /*@__PURE__*/ (function () {\n    function LoadingBarInterceptor(loadingBar) {\n        this.loadingBar = loadingBar;\n    }\n    LoadingBarInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        if (req.headers.has('ignoreLoadingBar')) {\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        var r = next.handle(req);\n        var started = false;\n        var responseSubscribe = r.subscribe.bind(r);\n        r.subscribe = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            _this.loadingBar.start();\n            started = true;\n            return responseSubscribe.apply(void 0, __spread(args));\n        };\n        return r.pipe(finalize(function () { return started && _this.loadingBar.complete(); }));\n    };\n    return LoadingBarInterceptor;\n}());\nvar LoadingBarHttpClientModule = /*@__PURE__*/ (function () {\n    function LoadingBarHttpClientModule() {\n    }\n    return LoadingBarHttpClientModule;\n}());\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as Éµa };\n//# sourceMappingURL=ngx-loading-bar-http-client.js.map\n",null]}